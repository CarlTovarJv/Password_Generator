import secrets
import string

## Funciones para generar contrase√±as
generate_password = lambda longi: ''.join(secrets.choice(string.ascii_letters + string.digits) for _ in range(longi))
generate_special_password = lambda longi: ''.join(secrets.choice(
    string.ascii_letters + string.digits + string.punctuation) for _ in range(longi))

## Historial de contrase√±as
password_history = []

while(True):
    print("\n ¬°Bienvenido al mejor generador de contrase√±as!\n")
    print("1. Generar contrase√±a")
    print("2. Ver historial de contrase√±as")
    print("3. Salir \n")

    option = input("Escribe tu opci√≥n: ").strip()
    

    if option == "1":
        try:
            longi = int(input("\nEscribe la cantidad de d√≠gitos: "))
            if longi <= 0:
                print("‚ùå El n√∫mero debe ser mayor que 0.")
                continue  
        except ValueError:
            print("‚ùå Valor inv√°lido. Ingresa un n√∫mero entero.")
            continue 


        caracters = input("¬øDeseas incluir caracteres especiales? (Si/No): ").strip().capitalize()

        if caracters == "No":
            password = generate_password(longi)
        elif caracters == "Si":
            password = generate_special_password(longi)
        else:
            print("‚ùå Opci√≥n no v√°lida, por favor escribe 'Si' o 'No'.")
            continue

        password_history.append(password)  # Guardar en historial
        print(f"\nüîë Tu nueva contrase√±a es: {password}")

    elif option == "2":
        if password_history:
            print("\nüìú Historial de contrase√±as generadas:")
            for i, passw in enumerate(password_history):
                print(f"{i + 1}. {passw}")
        else:
            print("\n ‚úã No has generado ninguna contrase√±a a√∫n.")

    elif option == "3":
        print("\n ¬°Vuelve pronto!")
        break 

    else:
        print("\n‚ùå Opci√≥n inv√°lida, intenta de nuevo.")


